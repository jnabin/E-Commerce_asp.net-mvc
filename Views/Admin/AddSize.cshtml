@model E_Commerce.Models.ViewModels.SizeViewModel

@{
    ViewBag.Title = "AddSize";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    var product = Model.product;
    var productsize = Model.productSizes;

    Model.productSizes = new E_Commerce.Models.ProductSize()
    {
        ProductID = Model.product.Product_id,
        Count = Model.product.Onhand
    };
}

<h2>AddSize</h2>

@using (Html.BeginForm("AddSize", "Admin", FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>ProductSize</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.product.Product_name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-7">
            @Html.EditorFor(model => model.product.Product_name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.product.Product_name, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.product.MainCategory.Category_name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-7">
            @Html.EditorFor(model => model.product.MainCategory.Category_name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.product.SizeCategory, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-7">
            @Html.EditorFor(model => model.product.SizeCategory, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.product.Onhand, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-7">
            @Html.EditorFor(model => model.product.Onhand, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.product.Onhand, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="display:none">
        @Html.LabelFor(model => model.productSizes.ProductID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-7">
            <input type="text" value="@Model.product.Product_id" name="ProductID" readonly />
        </div>
    </div>

    <div class="form-group">

        @Html.LabelFor(model => model.Sizes, "SizeName", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-7">
            <select id="sizelist" name="Sizes" class="form-control" multiple>
                @foreach (var item in Model.sizelist)
                {

                    <option value="@item.Value" selected="@item.Selected">@item.Text</option>
                }
            </select>
        </div>
    </div>
    @Html.HiddenFor(model => model.productSizes.ProductID)
    @Html.HiddenFor(model => model.productSizes.Count)
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
